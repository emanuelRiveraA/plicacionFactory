package Vistas;

import Clases.calculoInteres;
import Clases.fabrica;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.JOptionPane;

public class calcularEntrada extends javax.swing.JFrame {

// Arreglo para almacenar cada palabra del archivo .txt donde se encuentran registrados los clientes
    String[] datos;
    String typeCount = "";

    public calcularEntrada() {
        initComponents();
        cargarClientes();
    }

    public void cargarClientes() {
// Se crea variable string para almacenar todo el contenido en el archivo de clientes
        String clientes = "";

        try {
// Archivo FileReader que lee todo el contenido del .txt
            FileReader info = new FileReader(System.getProperty("user.home") + "\\Desktop\\DB_banco.txt");

// Se guarda el contenido en un BufferedReader
            BufferedReader contenido = new BufferedReader(info);

// Se recorre el contenido con un while linea por linea para obtener el nombre del cliente y el tipo de cuenta para
// guardarlo y mostrarlo en el Jlist
            while ((clientes = contenido.readLine()) != null) {
                datos = clientes.split(",");
                listCliente.addItem(datos[1] + "  " + "=>" + datos[0]);
            }
        } //Si se causa un error al leer cae aqui
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al leer el contenido del .txt de clientes", "Error detectado", JOptionPane.DEFAULT_OPTION);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblBienvenido1 = new javax.swing.JLabel();
        lblCalcularEntrada = new javax.swing.JLabel();
        txtEntrada = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        lblCantidadFinal = new javax.swing.JLabel();
        lblResultSalida = new javax.swing.JLabel();
        botCalcular = new javax.swing.JButton();
        botCancelar = new javax.swing.JButton();
        listCliente = new javax.swing.JComboBox<>();
        lblListClient = new javax.swing.JLabel();
        botRegresar = new javax.swing.JButton();
        lblTipoCuenta = new javax.swing.JLabel();
        lblResultTipoCuenta = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblBienvenido1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lblBienvenido1.setForeground(new java.awt.Color(255, 102, 102));
        lblBienvenido1.setText("Bienvenido a su Banco");

        lblCalcularEntrada.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblCalcularEntrada.setText("Calcular nueva entrada");

        txtEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEntradaActionPerformed(evt);
            }
        });
        txtEntrada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEntradaKeyTyped(evt);
            }
        });

        lblNombre.setText("Cantidad a calcular:");

        lblCantidadFinal.setText("Cantidad final:");

        botCalcular.setText("Calcular");
        botCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botCalcularActionPerformed(evt);
            }
        });

        botCancelar.setText("Cancelar");
        botCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botCancelarActionPerformed(evt);
            }
        });

        lblListClient.setText("Seleccionar el Cliente:");

        botRegresar.setText("Regresar");
        botRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botRegresarActionPerformed(evt);
            }
        });

        lblTipoCuenta.setText("Tipo de Cuenta:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lblBienvenido1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(lblCalcularEntrada)))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(botRegresar)
                            .addGap(18, 18, 18)
                            .addComponent(botCancelar)
                            .addGap(18, 18, 18)
                            .addComponent(botCalcular))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(81, 81, 81)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblCantidadFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblResultSalida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblResultTipoCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(104, 104, 104)
                                    .addComponent(lblTipoCuenta)
                                    .addGap(0, 0, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre)
                            .addComponent(lblListClient))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(listCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(lblBienvenido1)
                .addGap(18, 18, 18)
                .addComponent(lblCalcularEntrada)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblListClient))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombre))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTipoCuenta, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCantidadFinal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblResultSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(lblResultTipoCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botCalcular)
                    .addComponent(botCancelar)
                    .addComponent(botRegresar))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEntradaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEntradaActionPerformed

    private void botCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botCancelarActionPerformed
        txtEntrada.setText("");
        lblResultSalida.setText("");
    }//GEN-LAST:event_botCancelarActionPerformed

    private void botCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botCalcularActionPerformed
        if (Double.parseDouble(txtEntrada.getText()) < 0) {
            JOptionPane.showMessageDialog(null, "Ingrese solo Números positivos", "Error detectado", JOptionPane.DEFAULT_OPTION);
            txtEntrada.setText("");
        } else {

// Se crea el objeto calI para enviar los parametros necesarios a la fabrica y realizar los calculos
            // Se separa el contenido del Jlist para obtener unicamente el tipo de cuenta
            String[] typocuenta = listCliente.getSelectedItem().toString().split(">");
            calculoInteres calInt = fabrica.objConstruir(typocuenta[1], Double.parseDouble(txtEntrada.getText()));
            calInt.calcular(); // Se realiza el calculo de la entrada + intereses
            lblResultTipoCuenta.setText(calInt.tipoCuenta()); // Envia el tipo de cuenta del cliente a la pantalla
            lblResultSalida.setText(calInt.interes().toString()); // Envia el calculo con intereses de la entrada
        }
    }//GEN-LAST:event_botCalcularActionPerformed

    private void botRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botRegresarActionPerformed
        menu men = new menu();
        men.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_botRegresarActionPerformed

    private void txtEntradaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEntradaKeyTyped
        int k = (int) evt.getKeyChar();
        if (k >= 97 && k <= 122 || k >= 65 && k <= 90) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "Ingrese solo Números", "Error detectado", JOptionPane.DEFAULT_OPTION);
        }
        if (k == 241 || k == 209) {
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
            JOptionPane.showMessageDialog(null, "Ingrese solo Números", "Error detectado", JOptionPane.DEFAULT_OPTION);
        }
        if (k == 10) {
            txtEntrada.transferFocus();
        }
    }//GEN-LAST:event_txtEntradaKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botCalcular;
    private javax.swing.JButton botCancelar;
    private javax.swing.JButton botRegresar;
    private javax.swing.JLabel lblBienvenido1;
    private javax.swing.JLabel lblCalcularEntrada;
    private javax.swing.JLabel lblCantidadFinal;
    private javax.swing.JLabel lblListClient;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblResultSalida;
    private javax.swing.JLabel lblResultTipoCuenta;
    private javax.swing.JLabel lblTipoCuenta;
    private javax.swing.JComboBox<String> listCliente;
    private javax.swing.JTextField txtEntrada;
    // End of variables declaration//GEN-END:variables
}
